# Makefile.in generated by automake 1.10.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/
pkglibdir = $(libdir)/
pkgincludedir = $(includedir)/
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = Epiar$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	TODO config.guess config.sub depcomp install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_Epiar_OBJECTS = main.$(OBJEXT) ai.$(OBJEXT) input.$(OBJEXT) \
	alliances.$(OBJEXT) engines.$(OBJEXT) hud.$(OBJEXT) \
	models.$(OBJEXT) simulation.$(OBJEXT) starfield.$(OBJEXT) \
	planets.$(OBJEXT) player.$(OBJEXT) ship.$(OBJEXT) \
	sprite.$(OBJEXT) spritelist.$(OBJEXT) camera.$(OBJEXT) \
	cmath.$(OBJEXT) coordinate.$(OBJEXT) hashtbl.$(OBJEXT) \
	log.$(OBJEXT) timer.$(OBJEXT) trig.$(OBJEXT) vector.$(OBJEXT) \
	ui_widget.$(OBJEXT) ui_window.$(OBJEXT) ui.$(OBJEXT) \
	afont_base.$(OBJEXT) afont_gl.$(OBJEXT) animation.$(OBJEXT) \
	font.$(OBJEXT) image.$(OBJEXT) video.$(OBJEXT) \
	archive.$(OBJEXT) lua.$(OBJEXT) xml.$(OBJEXT) file.$(OBJEXT) \
	ui_button.$(OBJEXT) ui_label.$(OBJEXT) debug.$(OBJEXT) \
	graphics.$(OBJEXT) lua_test.$(OBJEXT)
Epiar_OBJECTS = $(am_Epiar_OBJECTS)
Epiar_DEPENDENCIES = Lua/src/liblua.a
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(Epiar_SOURCES)
DIST_SOURCES = $(Epiar_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/chris/proj/epiar/src/epiar/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/chris/proj/epiar/src/epiar/missing --run tar
AUTOCONF = ${SHELL} /home/chris/proj/epiar/src/epiar/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/proj/epiar/src/epiar/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/proj/epiar/src/epiar/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -I/usr/include/libxml2 -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT -DCOMP_GCC -DUNIX -I/usr/include/GL -Wall -DDEBUG
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -I/usr/include/libxml2 -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT -DCOMP_GCC -DUNIX -I/usr/include/GL -Wall -DDEBUG
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lSDL_mixer -lSDL_image  -lxml2 -lz -lm -lSDL -lpthread -lSDL_image -lSDL_mixer -lGL -lGLU -lz
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/chris/proj/epiar/src/epiar/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = 
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2 -lz -lm
abs_builddir = /home/chris/proj/epiar/src/epiar
abs_srcdir = /home/chris/proj/epiar/src/epiar
abs_top_builddir = /home/chris/proj/epiar/src/epiar
abs_top_srcdir = /home/chris/proj/epiar/src/epiar
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/chris/proj/epiar/src/epiar/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = 
top_builddir = .
top_srcdir = .
AM_CXXFLAGS = -I$(top_srcdir)/ -I$(top_srcdir)/Lua/src
Epiar_SOURCES = main.cpp AI/ai.cpp Input/input.cpp Engine/alliances.cpp \
                Engine/engines.cpp Engine/hud.cpp Engine/models.cpp \
                Engine/simulation.cpp Engine/starfield.cpp \
                Sprites/planets.cpp Sprites/player.cpp Sprites/ship.cpp \
                Sprites/sprite.cpp Sprites/spritelist.cpp \
                Utilities/camera.cpp Utilities/cmath.cpp Utilities/coordinate.cpp \
                Utilities/hashtbl.cpp Utilities/log.cpp \
                Utilities/timer.cpp Utilities/trig.cpp Utilities/vector.cpp \
                UI/ui_widget.cpp UI/ui_window.cpp UI/ui.cpp Graphics/afont/afont_base.cpp \
                Graphics/afont/afont_gl.cpp Graphics/animation.cpp Graphics/font.cpp Graphics/image.cpp \
                Graphics/video.cpp Utilities/archive.cpp Utilities/lua.cpp Utilities/xml.cpp \
                Utilities/file.cpp UI/ui_button.cpp UI/ui_label.cpp Utilities/debug.cpp \
                Debug/graphics.cpp Debug/lua_test.cpp

Epiar_LDADD = Lua/src/liblua.a
SUBDIRS = Lua
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
Epiar$(EXEEXT): $(Epiar_OBJECTS) $(Epiar_DEPENDENCIES) 
	@rm -f Epiar$(EXEEXT)
	$(CXXLINK) $(Epiar_OBJECTS) $(Epiar_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/afont_base.Po
include ./$(DEPDIR)/afont_gl.Po
include ./$(DEPDIR)/ai.Po
include ./$(DEPDIR)/alliances.Po
include ./$(DEPDIR)/animation.Po
include ./$(DEPDIR)/archive.Po
include ./$(DEPDIR)/camera.Po
include ./$(DEPDIR)/cmath.Po
include ./$(DEPDIR)/coordinate.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/engines.Po
include ./$(DEPDIR)/file.Po
include ./$(DEPDIR)/font.Po
include ./$(DEPDIR)/graphics.Po
include ./$(DEPDIR)/hashtbl.Po
include ./$(DEPDIR)/hud.Po
include ./$(DEPDIR)/image.Po
include ./$(DEPDIR)/input.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/lua.Po
include ./$(DEPDIR)/lua_test.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/models.Po
include ./$(DEPDIR)/planets.Po
include ./$(DEPDIR)/player.Po
include ./$(DEPDIR)/ship.Po
include ./$(DEPDIR)/simulation.Po
include ./$(DEPDIR)/sprite.Po
include ./$(DEPDIR)/spritelist.Po
include ./$(DEPDIR)/starfield.Po
include ./$(DEPDIR)/timer.Po
include ./$(DEPDIR)/trig.Po
include ./$(DEPDIR)/ui.Po
include ./$(DEPDIR)/ui_button.Po
include ./$(DEPDIR)/ui_label.Po
include ./$(DEPDIR)/ui_widget.Po
include ./$(DEPDIR)/ui_window.Po
include ./$(DEPDIR)/vector.Po
include ./$(DEPDIR)/video.Po
include ./$(DEPDIR)/xml.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ai.o: AI/ai.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ai.o -MD -MP -MF $(DEPDIR)/ai.Tpo -c -o ai.o `test -f 'AI/ai.cpp' || echo '$(srcdir)/'`AI/ai.cpp
	mv -f $(DEPDIR)/ai.Tpo $(DEPDIR)/ai.Po
#	source='AI/ai.cpp' object='ai.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ai.o `test -f 'AI/ai.cpp' || echo '$(srcdir)/'`AI/ai.cpp

ai.obj: AI/ai.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ai.obj -MD -MP -MF $(DEPDIR)/ai.Tpo -c -o ai.obj `if test -f 'AI/ai.cpp'; then $(CYGPATH_W) 'AI/ai.cpp'; else $(CYGPATH_W) '$(srcdir)/AI/ai.cpp'; fi`
	mv -f $(DEPDIR)/ai.Tpo $(DEPDIR)/ai.Po
#	source='AI/ai.cpp' object='ai.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ai.obj `if test -f 'AI/ai.cpp'; then $(CYGPATH_W) 'AI/ai.cpp'; else $(CYGPATH_W) '$(srcdir)/AI/ai.cpp'; fi`

input.o: Input/input.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT input.o -MD -MP -MF $(DEPDIR)/input.Tpo -c -o input.o `test -f 'Input/input.cpp' || echo '$(srcdir)/'`Input/input.cpp
	mv -f $(DEPDIR)/input.Tpo $(DEPDIR)/input.Po
#	source='Input/input.cpp' object='input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o input.o `test -f 'Input/input.cpp' || echo '$(srcdir)/'`Input/input.cpp

input.obj: Input/input.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT input.obj -MD -MP -MF $(DEPDIR)/input.Tpo -c -o input.obj `if test -f 'Input/input.cpp'; then $(CYGPATH_W) 'Input/input.cpp'; else $(CYGPATH_W) '$(srcdir)/Input/input.cpp'; fi`
	mv -f $(DEPDIR)/input.Tpo $(DEPDIR)/input.Po
#	source='Input/input.cpp' object='input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o input.obj `if test -f 'Input/input.cpp'; then $(CYGPATH_W) 'Input/input.cpp'; else $(CYGPATH_W) '$(srcdir)/Input/input.cpp'; fi`

alliances.o: Engine/alliances.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT alliances.o -MD -MP -MF $(DEPDIR)/alliances.Tpo -c -o alliances.o `test -f 'Engine/alliances.cpp' || echo '$(srcdir)/'`Engine/alliances.cpp
	mv -f $(DEPDIR)/alliances.Tpo $(DEPDIR)/alliances.Po
#	source='Engine/alliances.cpp' object='alliances.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o alliances.o `test -f 'Engine/alliances.cpp' || echo '$(srcdir)/'`Engine/alliances.cpp

alliances.obj: Engine/alliances.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT alliances.obj -MD -MP -MF $(DEPDIR)/alliances.Tpo -c -o alliances.obj `if test -f 'Engine/alliances.cpp'; then $(CYGPATH_W) 'Engine/alliances.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/alliances.cpp'; fi`
	mv -f $(DEPDIR)/alliances.Tpo $(DEPDIR)/alliances.Po
#	source='Engine/alliances.cpp' object='alliances.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o alliances.obj `if test -f 'Engine/alliances.cpp'; then $(CYGPATH_W) 'Engine/alliances.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/alliances.cpp'; fi`

engines.o: Engine/engines.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT engines.o -MD -MP -MF $(DEPDIR)/engines.Tpo -c -o engines.o `test -f 'Engine/engines.cpp' || echo '$(srcdir)/'`Engine/engines.cpp
	mv -f $(DEPDIR)/engines.Tpo $(DEPDIR)/engines.Po
#	source='Engine/engines.cpp' object='engines.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o engines.o `test -f 'Engine/engines.cpp' || echo '$(srcdir)/'`Engine/engines.cpp

engines.obj: Engine/engines.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT engines.obj -MD -MP -MF $(DEPDIR)/engines.Tpo -c -o engines.obj `if test -f 'Engine/engines.cpp'; then $(CYGPATH_W) 'Engine/engines.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/engines.cpp'; fi`
	mv -f $(DEPDIR)/engines.Tpo $(DEPDIR)/engines.Po
#	source='Engine/engines.cpp' object='engines.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o engines.obj `if test -f 'Engine/engines.cpp'; then $(CYGPATH_W) 'Engine/engines.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/engines.cpp'; fi`

hud.o: Engine/hud.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hud.o -MD -MP -MF $(DEPDIR)/hud.Tpo -c -o hud.o `test -f 'Engine/hud.cpp' || echo '$(srcdir)/'`Engine/hud.cpp
	mv -f $(DEPDIR)/hud.Tpo $(DEPDIR)/hud.Po
#	source='Engine/hud.cpp' object='hud.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hud.o `test -f 'Engine/hud.cpp' || echo '$(srcdir)/'`Engine/hud.cpp

hud.obj: Engine/hud.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hud.obj -MD -MP -MF $(DEPDIR)/hud.Tpo -c -o hud.obj `if test -f 'Engine/hud.cpp'; then $(CYGPATH_W) 'Engine/hud.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/hud.cpp'; fi`
	mv -f $(DEPDIR)/hud.Tpo $(DEPDIR)/hud.Po
#	source='Engine/hud.cpp' object='hud.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hud.obj `if test -f 'Engine/hud.cpp'; then $(CYGPATH_W) 'Engine/hud.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/hud.cpp'; fi`

models.o: Engine/models.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT models.o -MD -MP -MF $(DEPDIR)/models.Tpo -c -o models.o `test -f 'Engine/models.cpp' || echo '$(srcdir)/'`Engine/models.cpp
	mv -f $(DEPDIR)/models.Tpo $(DEPDIR)/models.Po
#	source='Engine/models.cpp' object='models.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o models.o `test -f 'Engine/models.cpp' || echo '$(srcdir)/'`Engine/models.cpp

models.obj: Engine/models.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT models.obj -MD -MP -MF $(DEPDIR)/models.Tpo -c -o models.obj `if test -f 'Engine/models.cpp'; then $(CYGPATH_W) 'Engine/models.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/models.cpp'; fi`
	mv -f $(DEPDIR)/models.Tpo $(DEPDIR)/models.Po
#	source='Engine/models.cpp' object='models.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o models.obj `if test -f 'Engine/models.cpp'; then $(CYGPATH_W) 'Engine/models.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/models.cpp'; fi`

simulation.o: Engine/simulation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simulation.o -MD -MP -MF $(DEPDIR)/simulation.Tpo -c -o simulation.o `test -f 'Engine/simulation.cpp' || echo '$(srcdir)/'`Engine/simulation.cpp
	mv -f $(DEPDIR)/simulation.Tpo $(DEPDIR)/simulation.Po
#	source='Engine/simulation.cpp' object='simulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simulation.o `test -f 'Engine/simulation.cpp' || echo '$(srcdir)/'`Engine/simulation.cpp

simulation.obj: Engine/simulation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simulation.obj -MD -MP -MF $(DEPDIR)/simulation.Tpo -c -o simulation.obj `if test -f 'Engine/simulation.cpp'; then $(CYGPATH_W) 'Engine/simulation.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/simulation.cpp'; fi`
	mv -f $(DEPDIR)/simulation.Tpo $(DEPDIR)/simulation.Po
#	source='Engine/simulation.cpp' object='simulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simulation.obj `if test -f 'Engine/simulation.cpp'; then $(CYGPATH_W) 'Engine/simulation.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/simulation.cpp'; fi`

starfield.o: Engine/starfield.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starfield.o -MD -MP -MF $(DEPDIR)/starfield.Tpo -c -o starfield.o `test -f 'Engine/starfield.cpp' || echo '$(srcdir)/'`Engine/starfield.cpp
	mv -f $(DEPDIR)/starfield.Tpo $(DEPDIR)/starfield.Po
#	source='Engine/starfield.cpp' object='starfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starfield.o `test -f 'Engine/starfield.cpp' || echo '$(srcdir)/'`Engine/starfield.cpp

starfield.obj: Engine/starfield.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starfield.obj -MD -MP -MF $(DEPDIR)/starfield.Tpo -c -o starfield.obj `if test -f 'Engine/starfield.cpp'; then $(CYGPATH_W) 'Engine/starfield.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/starfield.cpp'; fi`
	mv -f $(DEPDIR)/starfield.Tpo $(DEPDIR)/starfield.Po
#	source='Engine/starfield.cpp' object='starfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starfield.obj `if test -f 'Engine/starfield.cpp'; then $(CYGPATH_W) 'Engine/starfield.cpp'; else $(CYGPATH_W) '$(srcdir)/Engine/starfield.cpp'; fi`

planets.o: Sprites/planets.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT planets.o -MD -MP -MF $(DEPDIR)/planets.Tpo -c -o planets.o `test -f 'Sprites/planets.cpp' || echo '$(srcdir)/'`Sprites/planets.cpp
	mv -f $(DEPDIR)/planets.Tpo $(DEPDIR)/planets.Po
#	source='Sprites/planets.cpp' object='planets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o planets.o `test -f 'Sprites/planets.cpp' || echo '$(srcdir)/'`Sprites/planets.cpp

planets.obj: Sprites/planets.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT planets.obj -MD -MP -MF $(DEPDIR)/planets.Tpo -c -o planets.obj `if test -f 'Sprites/planets.cpp'; then $(CYGPATH_W) 'Sprites/planets.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/planets.cpp'; fi`
	mv -f $(DEPDIR)/planets.Tpo $(DEPDIR)/planets.Po
#	source='Sprites/planets.cpp' object='planets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o planets.obj `if test -f 'Sprites/planets.cpp'; then $(CYGPATH_W) 'Sprites/planets.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/planets.cpp'; fi`

player.o: Sprites/player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT player.o -MD -MP -MF $(DEPDIR)/player.Tpo -c -o player.o `test -f 'Sprites/player.cpp' || echo '$(srcdir)/'`Sprites/player.cpp
	mv -f $(DEPDIR)/player.Tpo $(DEPDIR)/player.Po
#	source='Sprites/player.cpp' object='player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o player.o `test -f 'Sprites/player.cpp' || echo '$(srcdir)/'`Sprites/player.cpp

player.obj: Sprites/player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT player.obj -MD -MP -MF $(DEPDIR)/player.Tpo -c -o player.obj `if test -f 'Sprites/player.cpp'; then $(CYGPATH_W) 'Sprites/player.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/player.cpp'; fi`
	mv -f $(DEPDIR)/player.Tpo $(DEPDIR)/player.Po
#	source='Sprites/player.cpp' object='player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o player.obj `if test -f 'Sprites/player.cpp'; then $(CYGPATH_W) 'Sprites/player.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/player.cpp'; fi`

ship.o: Sprites/ship.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ship.o -MD -MP -MF $(DEPDIR)/ship.Tpo -c -o ship.o `test -f 'Sprites/ship.cpp' || echo '$(srcdir)/'`Sprites/ship.cpp
	mv -f $(DEPDIR)/ship.Tpo $(DEPDIR)/ship.Po
#	source='Sprites/ship.cpp' object='ship.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ship.o `test -f 'Sprites/ship.cpp' || echo '$(srcdir)/'`Sprites/ship.cpp

ship.obj: Sprites/ship.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ship.obj -MD -MP -MF $(DEPDIR)/ship.Tpo -c -o ship.obj `if test -f 'Sprites/ship.cpp'; then $(CYGPATH_W) 'Sprites/ship.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/ship.cpp'; fi`
	mv -f $(DEPDIR)/ship.Tpo $(DEPDIR)/ship.Po
#	source='Sprites/ship.cpp' object='ship.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ship.obj `if test -f 'Sprites/ship.cpp'; then $(CYGPATH_W) 'Sprites/ship.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/ship.cpp'; fi`

sprite.o: Sprites/sprite.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sprite.o -MD -MP -MF $(DEPDIR)/sprite.Tpo -c -o sprite.o `test -f 'Sprites/sprite.cpp' || echo '$(srcdir)/'`Sprites/sprite.cpp
	mv -f $(DEPDIR)/sprite.Tpo $(DEPDIR)/sprite.Po
#	source='Sprites/sprite.cpp' object='sprite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sprite.o `test -f 'Sprites/sprite.cpp' || echo '$(srcdir)/'`Sprites/sprite.cpp

sprite.obj: Sprites/sprite.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sprite.obj -MD -MP -MF $(DEPDIR)/sprite.Tpo -c -o sprite.obj `if test -f 'Sprites/sprite.cpp'; then $(CYGPATH_W) 'Sprites/sprite.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/sprite.cpp'; fi`
	mv -f $(DEPDIR)/sprite.Tpo $(DEPDIR)/sprite.Po
#	source='Sprites/sprite.cpp' object='sprite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sprite.obj `if test -f 'Sprites/sprite.cpp'; then $(CYGPATH_W) 'Sprites/sprite.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/sprite.cpp'; fi`

spritelist.o: Sprites/spritelist.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spritelist.o -MD -MP -MF $(DEPDIR)/spritelist.Tpo -c -o spritelist.o `test -f 'Sprites/spritelist.cpp' || echo '$(srcdir)/'`Sprites/spritelist.cpp
	mv -f $(DEPDIR)/spritelist.Tpo $(DEPDIR)/spritelist.Po
#	source='Sprites/spritelist.cpp' object='spritelist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spritelist.o `test -f 'Sprites/spritelist.cpp' || echo '$(srcdir)/'`Sprites/spritelist.cpp

spritelist.obj: Sprites/spritelist.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spritelist.obj -MD -MP -MF $(DEPDIR)/spritelist.Tpo -c -o spritelist.obj `if test -f 'Sprites/spritelist.cpp'; then $(CYGPATH_W) 'Sprites/spritelist.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/spritelist.cpp'; fi`
	mv -f $(DEPDIR)/spritelist.Tpo $(DEPDIR)/spritelist.Po
#	source='Sprites/spritelist.cpp' object='spritelist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spritelist.obj `if test -f 'Sprites/spritelist.cpp'; then $(CYGPATH_W) 'Sprites/spritelist.cpp'; else $(CYGPATH_W) '$(srcdir)/Sprites/spritelist.cpp'; fi`

camera.o: Utilities/camera.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT camera.o -MD -MP -MF $(DEPDIR)/camera.Tpo -c -o camera.o `test -f 'Utilities/camera.cpp' || echo '$(srcdir)/'`Utilities/camera.cpp
	mv -f $(DEPDIR)/camera.Tpo $(DEPDIR)/camera.Po
#	source='Utilities/camera.cpp' object='camera.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o camera.o `test -f 'Utilities/camera.cpp' || echo '$(srcdir)/'`Utilities/camera.cpp

camera.obj: Utilities/camera.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT camera.obj -MD -MP -MF $(DEPDIR)/camera.Tpo -c -o camera.obj `if test -f 'Utilities/camera.cpp'; then $(CYGPATH_W) 'Utilities/camera.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/camera.cpp'; fi`
	mv -f $(DEPDIR)/camera.Tpo $(DEPDIR)/camera.Po
#	source='Utilities/camera.cpp' object='camera.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o camera.obj `if test -f 'Utilities/camera.cpp'; then $(CYGPATH_W) 'Utilities/camera.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/camera.cpp'; fi`

cmath.o: Utilities/cmath.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmath.o -MD -MP -MF $(DEPDIR)/cmath.Tpo -c -o cmath.o `test -f 'Utilities/cmath.cpp' || echo '$(srcdir)/'`Utilities/cmath.cpp
	mv -f $(DEPDIR)/cmath.Tpo $(DEPDIR)/cmath.Po
#	source='Utilities/cmath.cpp' object='cmath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmath.o `test -f 'Utilities/cmath.cpp' || echo '$(srcdir)/'`Utilities/cmath.cpp

cmath.obj: Utilities/cmath.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmath.obj -MD -MP -MF $(DEPDIR)/cmath.Tpo -c -o cmath.obj `if test -f 'Utilities/cmath.cpp'; then $(CYGPATH_W) 'Utilities/cmath.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/cmath.cpp'; fi`
	mv -f $(DEPDIR)/cmath.Tpo $(DEPDIR)/cmath.Po
#	source='Utilities/cmath.cpp' object='cmath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmath.obj `if test -f 'Utilities/cmath.cpp'; then $(CYGPATH_W) 'Utilities/cmath.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/cmath.cpp'; fi`

coordinate.o: Utilities/coordinate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coordinate.o -MD -MP -MF $(DEPDIR)/coordinate.Tpo -c -o coordinate.o `test -f 'Utilities/coordinate.cpp' || echo '$(srcdir)/'`Utilities/coordinate.cpp
	mv -f $(DEPDIR)/coordinate.Tpo $(DEPDIR)/coordinate.Po
#	source='Utilities/coordinate.cpp' object='coordinate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coordinate.o `test -f 'Utilities/coordinate.cpp' || echo '$(srcdir)/'`Utilities/coordinate.cpp

coordinate.obj: Utilities/coordinate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coordinate.obj -MD -MP -MF $(DEPDIR)/coordinate.Tpo -c -o coordinate.obj `if test -f 'Utilities/coordinate.cpp'; then $(CYGPATH_W) 'Utilities/coordinate.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/coordinate.cpp'; fi`
	mv -f $(DEPDIR)/coordinate.Tpo $(DEPDIR)/coordinate.Po
#	source='Utilities/coordinate.cpp' object='coordinate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coordinate.obj `if test -f 'Utilities/coordinate.cpp'; then $(CYGPATH_W) 'Utilities/coordinate.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/coordinate.cpp'; fi`

hashtbl.o: Utilities/hashtbl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hashtbl.o -MD -MP -MF $(DEPDIR)/hashtbl.Tpo -c -o hashtbl.o `test -f 'Utilities/hashtbl.cpp' || echo '$(srcdir)/'`Utilities/hashtbl.cpp
	mv -f $(DEPDIR)/hashtbl.Tpo $(DEPDIR)/hashtbl.Po
#	source='Utilities/hashtbl.cpp' object='hashtbl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hashtbl.o `test -f 'Utilities/hashtbl.cpp' || echo '$(srcdir)/'`Utilities/hashtbl.cpp

hashtbl.obj: Utilities/hashtbl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hashtbl.obj -MD -MP -MF $(DEPDIR)/hashtbl.Tpo -c -o hashtbl.obj `if test -f 'Utilities/hashtbl.cpp'; then $(CYGPATH_W) 'Utilities/hashtbl.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/hashtbl.cpp'; fi`
	mv -f $(DEPDIR)/hashtbl.Tpo $(DEPDIR)/hashtbl.Po
#	source='Utilities/hashtbl.cpp' object='hashtbl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hashtbl.obj `if test -f 'Utilities/hashtbl.cpp'; then $(CYGPATH_W) 'Utilities/hashtbl.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/hashtbl.cpp'; fi`

log.o: Utilities/log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT log.o -MD -MP -MF $(DEPDIR)/log.Tpo -c -o log.o `test -f 'Utilities/log.cpp' || echo '$(srcdir)/'`Utilities/log.cpp
	mv -f $(DEPDIR)/log.Tpo $(DEPDIR)/log.Po
#	source='Utilities/log.cpp' object='log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o log.o `test -f 'Utilities/log.cpp' || echo '$(srcdir)/'`Utilities/log.cpp

log.obj: Utilities/log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT log.obj -MD -MP -MF $(DEPDIR)/log.Tpo -c -o log.obj `if test -f 'Utilities/log.cpp'; then $(CYGPATH_W) 'Utilities/log.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/log.cpp'; fi`
	mv -f $(DEPDIR)/log.Tpo $(DEPDIR)/log.Po
#	source='Utilities/log.cpp' object='log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o log.obj `if test -f 'Utilities/log.cpp'; then $(CYGPATH_W) 'Utilities/log.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/log.cpp'; fi`

timer.o: Utilities/timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.o -MD -MP -MF $(DEPDIR)/timer.Tpo -c -o timer.o `test -f 'Utilities/timer.cpp' || echo '$(srcdir)/'`Utilities/timer.cpp
	mv -f $(DEPDIR)/timer.Tpo $(DEPDIR)/timer.Po
#	source='Utilities/timer.cpp' object='timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.o `test -f 'Utilities/timer.cpp' || echo '$(srcdir)/'`Utilities/timer.cpp

timer.obj: Utilities/timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.obj -MD -MP -MF $(DEPDIR)/timer.Tpo -c -o timer.obj `if test -f 'Utilities/timer.cpp'; then $(CYGPATH_W) 'Utilities/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/timer.cpp'; fi`
	mv -f $(DEPDIR)/timer.Tpo $(DEPDIR)/timer.Po
#	source='Utilities/timer.cpp' object='timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.obj `if test -f 'Utilities/timer.cpp'; then $(CYGPATH_W) 'Utilities/timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/timer.cpp'; fi`

trig.o: Utilities/trig.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trig.o -MD -MP -MF $(DEPDIR)/trig.Tpo -c -o trig.o `test -f 'Utilities/trig.cpp' || echo '$(srcdir)/'`Utilities/trig.cpp
	mv -f $(DEPDIR)/trig.Tpo $(DEPDIR)/trig.Po
#	source='Utilities/trig.cpp' object='trig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trig.o `test -f 'Utilities/trig.cpp' || echo '$(srcdir)/'`Utilities/trig.cpp

trig.obj: Utilities/trig.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trig.obj -MD -MP -MF $(DEPDIR)/trig.Tpo -c -o trig.obj `if test -f 'Utilities/trig.cpp'; then $(CYGPATH_W) 'Utilities/trig.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/trig.cpp'; fi`
	mv -f $(DEPDIR)/trig.Tpo $(DEPDIR)/trig.Po
#	source='Utilities/trig.cpp' object='trig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trig.obj `if test -f 'Utilities/trig.cpp'; then $(CYGPATH_W) 'Utilities/trig.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/trig.cpp'; fi`

vector.o: Utilities/vector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector.o -MD -MP -MF $(DEPDIR)/vector.Tpo -c -o vector.o `test -f 'Utilities/vector.cpp' || echo '$(srcdir)/'`Utilities/vector.cpp
	mv -f $(DEPDIR)/vector.Tpo $(DEPDIR)/vector.Po
#	source='Utilities/vector.cpp' object='vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector.o `test -f 'Utilities/vector.cpp' || echo '$(srcdir)/'`Utilities/vector.cpp

vector.obj: Utilities/vector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector.obj -MD -MP -MF $(DEPDIR)/vector.Tpo -c -o vector.obj `if test -f 'Utilities/vector.cpp'; then $(CYGPATH_W) 'Utilities/vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/vector.cpp'; fi`
	mv -f $(DEPDIR)/vector.Tpo $(DEPDIR)/vector.Po
#	source='Utilities/vector.cpp' object='vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector.obj `if test -f 'Utilities/vector.cpp'; then $(CYGPATH_W) 'Utilities/vector.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/vector.cpp'; fi`

ui_widget.o: UI/ui_widget.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_widget.o -MD -MP -MF $(DEPDIR)/ui_widget.Tpo -c -o ui_widget.o `test -f 'UI/ui_widget.cpp' || echo '$(srcdir)/'`UI/ui_widget.cpp
	mv -f $(DEPDIR)/ui_widget.Tpo $(DEPDIR)/ui_widget.Po
#	source='UI/ui_widget.cpp' object='ui_widget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_widget.o `test -f 'UI/ui_widget.cpp' || echo '$(srcdir)/'`UI/ui_widget.cpp

ui_widget.obj: UI/ui_widget.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_widget.obj -MD -MP -MF $(DEPDIR)/ui_widget.Tpo -c -o ui_widget.obj `if test -f 'UI/ui_widget.cpp'; then $(CYGPATH_W) 'UI/ui_widget.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_widget.cpp'; fi`
	mv -f $(DEPDIR)/ui_widget.Tpo $(DEPDIR)/ui_widget.Po
#	source='UI/ui_widget.cpp' object='ui_widget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_widget.obj `if test -f 'UI/ui_widget.cpp'; then $(CYGPATH_W) 'UI/ui_widget.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_widget.cpp'; fi`

ui_window.o: UI/ui_window.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_window.o -MD -MP -MF $(DEPDIR)/ui_window.Tpo -c -o ui_window.o `test -f 'UI/ui_window.cpp' || echo '$(srcdir)/'`UI/ui_window.cpp
	mv -f $(DEPDIR)/ui_window.Tpo $(DEPDIR)/ui_window.Po
#	source='UI/ui_window.cpp' object='ui_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_window.o `test -f 'UI/ui_window.cpp' || echo '$(srcdir)/'`UI/ui_window.cpp

ui_window.obj: UI/ui_window.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_window.obj -MD -MP -MF $(DEPDIR)/ui_window.Tpo -c -o ui_window.obj `if test -f 'UI/ui_window.cpp'; then $(CYGPATH_W) 'UI/ui_window.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_window.cpp'; fi`
	mv -f $(DEPDIR)/ui_window.Tpo $(DEPDIR)/ui_window.Po
#	source='UI/ui_window.cpp' object='ui_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_window.obj `if test -f 'UI/ui_window.cpp'; then $(CYGPATH_W) 'UI/ui_window.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_window.cpp'; fi`

ui.o: UI/ui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui.o -MD -MP -MF $(DEPDIR)/ui.Tpo -c -o ui.o `test -f 'UI/ui.cpp' || echo '$(srcdir)/'`UI/ui.cpp
	mv -f $(DEPDIR)/ui.Tpo $(DEPDIR)/ui.Po
#	source='UI/ui.cpp' object='ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui.o `test -f 'UI/ui.cpp' || echo '$(srcdir)/'`UI/ui.cpp

ui.obj: UI/ui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui.obj -MD -MP -MF $(DEPDIR)/ui.Tpo -c -o ui.obj `if test -f 'UI/ui.cpp'; then $(CYGPATH_W) 'UI/ui.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui.cpp'; fi`
	mv -f $(DEPDIR)/ui.Tpo $(DEPDIR)/ui.Po
#	source='UI/ui.cpp' object='ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui.obj `if test -f 'UI/ui.cpp'; then $(CYGPATH_W) 'UI/ui.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui.cpp'; fi`

afont_base.o: Graphics/afont/afont_base.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT afont_base.o -MD -MP -MF $(DEPDIR)/afont_base.Tpo -c -o afont_base.o `test -f 'Graphics/afont/afont_base.cpp' || echo '$(srcdir)/'`Graphics/afont/afont_base.cpp
	mv -f $(DEPDIR)/afont_base.Tpo $(DEPDIR)/afont_base.Po
#	source='Graphics/afont/afont_base.cpp' object='afont_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o afont_base.o `test -f 'Graphics/afont/afont_base.cpp' || echo '$(srcdir)/'`Graphics/afont/afont_base.cpp

afont_base.obj: Graphics/afont/afont_base.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT afont_base.obj -MD -MP -MF $(DEPDIR)/afont_base.Tpo -c -o afont_base.obj `if test -f 'Graphics/afont/afont_base.cpp'; then $(CYGPATH_W) 'Graphics/afont/afont_base.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/afont/afont_base.cpp'; fi`
	mv -f $(DEPDIR)/afont_base.Tpo $(DEPDIR)/afont_base.Po
#	source='Graphics/afont/afont_base.cpp' object='afont_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o afont_base.obj `if test -f 'Graphics/afont/afont_base.cpp'; then $(CYGPATH_W) 'Graphics/afont/afont_base.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/afont/afont_base.cpp'; fi`

afont_gl.o: Graphics/afont/afont_gl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT afont_gl.o -MD -MP -MF $(DEPDIR)/afont_gl.Tpo -c -o afont_gl.o `test -f 'Graphics/afont/afont_gl.cpp' || echo '$(srcdir)/'`Graphics/afont/afont_gl.cpp
	mv -f $(DEPDIR)/afont_gl.Tpo $(DEPDIR)/afont_gl.Po
#	source='Graphics/afont/afont_gl.cpp' object='afont_gl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o afont_gl.o `test -f 'Graphics/afont/afont_gl.cpp' || echo '$(srcdir)/'`Graphics/afont/afont_gl.cpp

afont_gl.obj: Graphics/afont/afont_gl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT afont_gl.obj -MD -MP -MF $(DEPDIR)/afont_gl.Tpo -c -o afont_gl.obj `if test -f 'Graphics/afont/afont_gl.cpp'; then $(CYGPATH_W) 'Graphics/afont/afont_gl.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/afont/afont_gl.cpp'; fi`
	mv -f $(DEPDIR)/afont_gl.Tpo $(DEPDIR)/afont_gl.Po
#	source='Graphics/afont/afont_gl.cpp' object='afont_gl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o afont_gl.obj `if test -f 'Graphics/afont/afont_gl.cpp'; then $(CYGPATH_W) 'Graphics/afont/afont_gl.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/afont/afont_gl.cpp'; fi`

animation.o: Graphics/animation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT animation.o -MD -MP -MF $(DEPDIR)/animation.Tpo -c -o animation.o `test -f 'Graphics/animation.cpp' || echo '$(srcdir)/'`Graphics/animation.cpp
	mv -f $(DEPDIR)/animation.Tpo $(DEPDIR)/animation.Po
#	source='Graphics/animation.cpp' object='animation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o animation.o `test -f 'Graphics/animation.cpp' || echo '$(srcdir)/'`Graphics/animation.cpp

animation.obj: Graphics/animation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT animation.obj -MD -MP -MF $(DEPDIR)/animation.Tpo -c -o animation.obj `if test -f 'Graphics/animation.cpp'; then $(CYGPATH_W) 'Graphics/animation.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/animation.cpp'; fi`
	mv -f $(DEPDIR)/animation.Tpo $(DEPDIR)/animation.Po
#	source='Graphics/animation.cpp' object='animation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o animation.obj `if test -f 'Graphics/animation.cpp'; then $(CYGPATH_W) 'Graphics/animation.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/animation.cpp'; fi`

font.o: Graphics/font.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT font.o -MD -MP -MF $(DEPDIR)/font.Tpo -c -o font.o `test -f 'Graphics/font.cpp' || echo '$(srcdir)/'`Graphics/font.cpp
	mv -f $(DEPDIR)/font.Tpo $(DEPDIR)/font.Po
#	source='Graphics/font.cpp' object='font.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o font.o `test -f 'Graphics/font.cpp' || echo '$(srcdir)/'`Graphics/font.cpp

font.obj: Graphics/font.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT font.obj -MD -MP -MF $(DEPDIR)/font.Tpo -c -o font.obj `if test -f 'Graphics/font.cpp'; then $(CYGPATH_W) 'Graphics/font.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/font.cpp'; fi`
	mv -f $(DEPDIR)/font.Tpo $(DEPDIR)/font.Po
#	source='Graphics/font.cpp' object='font.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o font.obj `if test -f 'Graphics/font.cpp'; then $(CYGPATH_W) 'Graphics/font.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/font.cpp'; fi`

image.o: Graphics/image.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image.o -MD -MP -MF $(DEPDIR)/image.Tpo -c -o image.o `test -f 'Graphics/image.cpp' || echo '$(srcdir)/'`Graphics/image.cpp
	mv -f $(DEPDIR)/image.Tpo $(DEPDIR)/image.Po
#	source='Graphics/image.cpp' object='image.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image.o `test -f 'Graphics/image.cpp' || echo '$(srcdir)/'`Graphics/image.cpp

image.obj: Graphics/image.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT image.obj -MD -MP -MF $(DEPDIR)/image.Tpo -c -o image.obj `if test -f 'Graphics/image.cpp'; then $(CYGPATH_W) 'Graphics/image.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/image.cpp'; fi`
	mv -f $(DEPDIR)/image.Tpo $(DEPDIR)/image.Po
#	source='Graphics/image.cpp' object='image.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o image.obj `if test -f 'Graphics/image.cpp'; then $(CYGPATH_W) 'Graphics/image.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/image.cpp'; fi`

video.o: Graphics/video.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT video.o -MD -MP -MF $(DEPDIR)/video.Tpo -c -o video.o `test -f 'Graphics/video.cpp' || echo '$(srcdir)/'`Graphics/video.cpp
	mv -f $(DEPDIR)/video.Tpo $(DEPDIR)/video.Po
#	source='Graphics/video.cpp' object='video.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o video.o `test -f 'Graphics/video.cpp' || echo '$(srcdir)/'`Graphics/video.cpp

video.obj: Graphics/video.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT video.obj -MD -MP -MF $(DEPDIR)/video.Tpo -c -o video.obj `if test -f 'Graphics/video.cpp'; then $(CYGPATH_W) 'Graphics/video.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/video.cpp'; fi`
	mv -f $(DEPDIR)/video.Tpo $(DEPDIR)/video.Po
#	source='Graphics/video.cpp' object='video.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o video.obj `if test -f 'Graphics/video.cpp'; then $(CYGPATH_W) 'Graphics/video.cpp'; else $(CYGPATH_W) '$(srcdir)/Graphics/video.cpp'; fi`

archive.o: Utilities/archive.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT archive.o -MD -MP -MF $(DEPDIR)/archive.Tpo -c -o archive.o `test -f 'Utilities/archive.cpp' || echo '$(srcdir)/'`Utilities/archive.cpp
	mv -f $(DEPDIR)/archive.Tpo $(DEPDIR)/archive.Po
#	source='Utilities/archive.cpp' object='archive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o archive.o `test -f 'Utilities/archive.cpp' || echo '$(srcdir)/'`Utilities/archive.cpp

archive.obj: Utilities/archive.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT archive.obj -MD -MP -MF $(DEPDIR)/archive.Tpo -c -o archive.obj `if test -f 'Utilities/archive.cpp'; then $(CYGPATH_W) 'Utilities/archive.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/archive.cpp'; fi`
	mv -f $(DEPDIR)/archive.Tpo $(DEPDIR)/archive.Po
#	source='Utilities/archive.cpp' object='archive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o archive.obj `if test -f 'Utilities/archive.cpp'; then $(CYGPATH_W) 'Utilities/archive.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/archive.cpp'; fi`

lua.o: Utilities/lua.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lua.o -MD -MP -MF $(DEPDIR)/lua.Tpo -c -o lua.o `test -f 'Utilities/lua.cpp' || echo '$(srcdir)/'`Utilities/lua.cpp
	mv -f $(DEPDIR)/lua.Tpo $(DEPDIR)/lua.Po
#	source='Utilities/lua.cpp' object='lua.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lua.o `test -f 'Utilities/lua.cpp' || echo '$(srcdir)/'`Utilities/lua.cpp

lua.obj: Utilities/lua.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lua.obj -MD -MP -MF $(DEPDIR)/lua.Tpo -c -o lua.obj `if test -f 'Utilities/lua.cpp'; then $(CYGPATH_W) 'Utilities/lua.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/lua.cpp'; fi`
	mv -f $(DEPDIR)/lua.Tpo $(DEPDIR)/lua.Po
#	source='Utilities/lua.cpp' object='lua.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lua.obj `if test -f 'Utilities/lua.cpp'; then $(CYGPATH_W) 'Utilities/lua.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/lua.cpp'; fi`

xml.o: Utilities/xml.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xml.o -MD -MP -MF $(DEPDIR)/xml.Tpo -c -o xml.o `test -f 'Utilities/xml.cpp' || echo '$(srcdir)/'`Utilities/xml.cpp
	mv -f $(DEPDIR)/xml.Tpo $(DEPDIR)/xml.Po
#	source='Utilities/xml.cpp' object='xml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xml.o `test -f 'Utilities/xml.cpp' || echo '$(srcdir)/'`Utilities/xml.cpp

xml.obj: Utilities/xml.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xml.obj -MD -MP -MF $(DEPDIR)/xml.Tpo -c -o xml.obj `if test -f 'Utilities/xml.cpp'; then $(CYGPATH_W) 'Utilities/xml.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/xml.cpp'; fi`
	mv -f $(DEPDIR)/xml.Tpo $(DEPDIR)/xml.Po
#	source='Utilities/xml.cpp' object='xml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xml.obj `if test -f 'Utilities/xml.cpp'; then $(CYGPATH_W) 'Utilities/xml.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/xml.cpp'; fi`

file.o: Utilities/file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file.o -MD -MP -MF $(DEPDIR)/file.Tpo -c -o file.o `test -f 'Utilities/file.cpp' || echo '$(srcdir)/'`Utilities/file.cpp
	mv -f $(DEPDIR)/file.Tpo $(DEPDIR)/file.Po
#	source='Utilities/file.cpp' object='file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file.o `test -f 'Utilities/file.cpp' || echo '$(srcdir)/'`Utilities/file.cpp

file.obj: Utilities/file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file.obj -MD -MP -MF $(DEPDIR)/file.Tpo -c -o file.obj `if test -f 'Utilities/file.cpp'; then $(CYGPATH_W) 'Utilities/file.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/file.cpp'; fi`
	mv -f $(DEPDIR)/file.Tpo $(DEPDIR)/file.Po
#	source='Utilities/file.cpp' object='file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file.obj `if test -f 'Utilities/file.cpp'; then $(CYGPATH_W) 'Utilities/file.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/file.cpp'; fi`

ui_button.o: UI/ui_button.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_button.o -MD -MP -MF $(DEPDIR)/ui_button.Tpo -c -o ui_button.o `test -f 'UI/ui_button.cpp' || echo '$(srcdir)/'`UI/ui_button.cpp
	mv -f $(DEPDIR)/ui_button.Tpo $(DEPDIR)/ui_button.Po
#	source='UI/ui_button.cpp' object='ui_button.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_button.o `test -f 'UI/ui_button.cpp' || echo '$(srcdir)/'`UI/ui_button.cpp

ui_button.obj: UI/ui_button.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_button.obj -MD -MP -MF $(DEPDIR)/ui_button.Tpo -c -o ui_button.obj `if test -f 'UI/ui_button.cpp'; then $(CYGPATH_W) 'UI/ui_button.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_button.cpp'; fi`
	mv -f $(DEPDIR)/ui_button.Tpo $(DEPDIR)/ui_button.Po
#	source='UI/ui_button.cpp' object='ui_button.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_button.obj `if test -f 'UI/ui_button.cpp'; then $(CYGPATH_W) 'UI/ui_button.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_button.cpp'; fi`

ui_label.o: UI/ui_label.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_label.o -MD -MP -MF $(DEPDIR)/ui_label.Tpo -c -o ui_label.o `test -f 'UI/ui_label.cpp' || echo '$(srcdir)/'`UI/ui_label.cpp
	mv -f $(DEPDIR)/ui_label.Tpo $(DEPDIR)/ui_label.Po
#	source='UI/ui_label.cpp' object='ui_label.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_label.o `test -f 'UI/ui_label.cpp' || echo '$(srcdir)/'`UI/ui_label.cpp

ui_label.obj: UI/ui_label.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ui_label.obj -MD -MP -MF $(DEPDIR)/ui_label.Tpo -c -o ui_label.obj `if test -f 'UI/ui_label.cpp'; then $(CYGPATH_W) 'UI/ui_label.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_label.cpp'; fi`
	mv -f $(DEPDIR)/ui_label.Tpo $(DEPDIR)/ui_label.Po
#	source='UI/ui_label.cpp' object='ui_label.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ui_label.obj `if test -f 'UI/ui_label.cpp'; then $(CYGPATH_W) 'UI/ui_label.cpp'; else $(CYGPATH_W) '$(srcdir)/UI/ui_label.cpp'; fi`

debug.o: Utilities/debug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.o -MD -MP -MF $(DEPDIR)/debug.Tpo -c -o debug.o `test -f 'Utilities/debug.cpp' || echo '$(srcdir)/'`Utilities/debug.cpp
	mv -f $(DEPDIR)/debug.Tpo $(DEPDIR)/debug.Po
#	source='Utilities/debug.cpp' object='debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.o `test -f 'Utilities/debug.cpp' || echo '$(srcdir)/'`Utilities/debug.cpp

debug.obj: Utilities/debug.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.obj -MD -MP -MF $(DEPDIR)/debug.Tpo -c -o debug.obj `if test -f 'Utilities/debug.cpp'; then $(CYGPATH_W) 'Utilities/debug.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/debug.cpp'; fi`
	mv -f $(DEPDIR)/debug.Tpo $(DEPDIR)/debug.Po
#	source='Utilities/debug.cpp' object='debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.obj `if test -f 'Utilities/debug.cpp'; then $(CYGPATH_W) 'Utilities/debug.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities/debug.cpp'; fi`

graphics.o: Debug/graphics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT graphics.o -MD -MP -MF $(DEPDIR)/graphics.Tpo -c -o graphics.o `test -f 'Debug/graphics.cpp' || echo '$(srcdir)/'`Debug/graphics.cpp
	mv -f $(DEPDIR)/graphics.Tpo $(DEPDIR)/graphics.Po
#	source='Debug/graphics.cpp' object='graphics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o graphics.o `test -f 'Debug/graphics.cpp' || echo '$(srcdir)/'`Debug/graphics.cpp

graphics.obj: Debug/graphics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT graphics.obj -MD -MP -MF $(DEPDIR)/graphics.Tpo -c -o graphics.obj `if test -f 'Debug/graphics.cpp'; then $(CYGPATH_W) 'Debug/graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/Debug/graphics.cpp'; fi`
	mv -f $(DEPDIR)/graphics.Tpo $(DEPDIR)/graphics.Po
#	source='Debug/graphics.cpp' object='graphics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o graphics.obj `if test -f 'Debug/graphics.cpp'; then $(CYGPATH_W) 'Debug/graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/Debug/graphics.cpp'; fi`

lua_test.o: Debug/lua_test.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lua_test.o -MD -MP -MF $(DEPDIR)/lua_test.Tpo -c -o lua_test.o `test -f 'Debug/lua_test.cpp' || echo '$(srcdir)/'`Debug/lua_test.cpp
	mv -f $(DEPDIR)/lua_test.Tpo $(DEPDIR)/lua_test.Po
#	source='Debug/lua_test.cpp' object='lua_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lua_test.o `test -f 'Debug/lua_test.cpp' || echo '$(srcdir)/'`Debug/lua_test.cpp

lua_test.obj: Debug/lua_test.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lua_test.obj -MD -MP -MF $(DEPDIR)/lua_test.Tpo -c -o lua_test.obj `if test -f 'Debug/lua_test.cpp'; then $(CYGPATH_W) 'Debug/lua_test.cpp'; else $(CYGPATH_W) '$(srcdir)/Debug/lua_test.cpp'; fi`
	mv -f $(DEPDIR)/lua_test.Tpo $(DEPDIR)/lua_test.Po
#	source='Debug/lua_test.cpp' object='lua_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lua_test.obj `if test -f 'Debug/lua_test.cpp'; then $(CYGPATH_W) 'Debug/lua_test.cpp'; else $(CYGPATH_W) '$(srcdir)/Debug/lua_test.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean clean-binPROGRAMS \
	clean-generic ctags ctags-recursive dist dist-all dist-bzip2 \
	dist-gzip dist-lzma dist-shar dist-tarZ dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
