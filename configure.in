PACKAGE=epiar
VERSION=0.4.2

dnl Init
AC_INIT(README)
AC_PREREQ(2.50)

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET 

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(config.h)

AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CC
AC_PROG_RANLIB

dnl Epiar Builds with freetype by default
AC_ARG_ENABLE(freetype, [  --disable-freetype      Build without the FreeType Library ], [], [])
AC_ARG_ENABLE(physicsfs, [  --disable-physicsfs    Build without PhysicsFS ], [], [])

dnl Include FreeType
LIBS="$LIBS -lfreetype"
dnl Include FTGL
LIBS="$LIBS -lftgl"

dnl Static path to dynamic Libraries.
dnl LIBS="$LIBS /opt/local/lib/libfreetype.a"
dnl LIBS="$LIBS /opt/local/lib/libftgl.a"
dnl LIBS="$LIBS /opt/local/lib/libxml2.a"
dnl LIBS="$LIBS /opt/local/lib/libz.a"

case "$target" in *-*-linux*)
	CFLAGS="$CFLAGS -I/usr/include/freetype2"
esac
case "$target" in *-*-freebsd*)
	CFLAGS="$CFLAGS -I/usr/local/include/freetype2"
esac
case "$target" in *-apple-darwin*)
	CFLAGS="$CFLAGS -I/opt/local/include/ -I/opt/local/include/freetype2"
esac

dnl Check for libxml2
AM_PATH_XML2(2.4.0, , AC_MSG_ERROR(Cannot find XML2: Is xml2-config in path?))
CFLAGS="$CFLAGS $XML_CPPFLAGS"
LIBS="$LIBS $XML_LIBS"

dnl Check for PhysicsFS
echo "PhysicsFS: '$enable_physicsfs'"
AS_IF(
	[test "_$enable_physicsfs" = "_yes"], dnl Turn Off by Default
	dnl[test "_$enable_physicsfs" != "_no"], dnl Turn On by Default
	[
		echo "Build using PhysicsFS"
		AC_DEFINE(USE_FREETYPE,["yes"],["Build using PhysicsFS"])
		LIBS="$LIBS -lphysfs"
		case "$target" in *-*-linux*)
			CFLAGS="$CFLAGS -I/usr/include/"
		esac
		case "$target" in *-*-freebsd*)
			CFLAGS="$CFLAGS -I/usr/local/include/"
		esac
		case "$target" in *-apple-darwin*)
			CFLAGS="$CFLAGS -I/opt/local/include/ -L/opt/local/lib"
		esac
	])

dnl Check for SDL
SDL_VERSION=1.2.10

case "$target" in
	*-*-linux* | *-*-cygwin* | *-*-mingw32* | *-*-freebsd*)
		AM_PATH_SDL($SDL_VERSION, :, AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!]))
		CFLAGS="$CFLAGS $SDL_CFLAGS -DCOMP_GCC"
		LIBS="$LIBS $SDL_LIBS"
esac
case "$target" in
	*-apple-darwin*)
	CFLAGS="$CFLAGS -DCOMP_GCC -I/Developer/Library/Frameworks/SDL.Framework/Headers -I/System/Library/Frameworks/OpenGL.framework/Headers"
	LIBS="$LIBS -framework SDL -framework OpenGL -framework Cocoa SDLMain.m"
esac

dnl Check for SDL_image
case "$target" in
	*-*-linux* | *-*-cygwin* | *-*-mingw32* | *-*-freebsd*)
	AC_CHECK_LIB(SDL_image, main,,AC_MSG_ERROR([*** SDL_image library not found!]))
	LIBS="$LIBS -lSDL_image"
esac
case "$target" in
	*-apple-darwin*)
	CFLAGS="$CFLAGS -I/Developer/Library/Frameworks/SDL_image.Framework/Headers"
	LIBS="$LIBS -framework SDL_image"
esac

dnl Check for SDL_mixer
case "$target" in
	*-*-linux* | *-*-cygwin* | *-*-mingw32* | *-*-freebsd*)
	AC_CHECK_LIB(SDL_mixer, main,,AC_MSG_ERROR([*** SDL_mixer library not found!]))
	LIBS="$LIBS -lSDL_mixer"
esac
case "$target" in
	*-apple-darwin*)
	CFLAGS="$CFLAGS -I/Library/Frameworks/SDL_mixer.Framework/Headers"
	LIBS="$LIBS -framework SDL_mixer"
esac

dnl Set MS Windows specific options - For afont and ntohl (Win32 provides this through Winsock)
case "$target" in
	*-*-cygwin* | *-*-mingw32*)
		CFLAGS="$CFLAGS -DSYS_IS_BRAINDEAD"
		LIBS="$LIBS -lwsock32 -lz"
		;;
esac

dnl Set Unix specific options
case "$target" in
	*-*-linux* | *-*-freebsd*)
		CFLAGS="$CFLAGS -DUNIX -I/usr/include/GL"
		LIBS="$LIBS -lGL -lGLU -lz"
		;;
esac

dnl Set Mac Os X specific options
case "$target" in
	*-apple-darwin*)
		CFLAGS="$CFLAGS -DDARWIN"
		LIBS="$LIBS -lz"
		;;
esac

CFLAGS="$CFLAGS -Wall"
CXXFLAGS="$CFLAGS"

AC_OUTPUT([Makefile])
